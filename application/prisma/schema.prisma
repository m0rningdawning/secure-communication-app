// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
}

model User {
  id               Int            @id @default(autoincrement())
  email            String         @unique
  username         String         @unique
  password         String
  publicKey        String
  lastActive       DateTime?
  createdAt        DateTime       @default(now())
  messagesSent     Message[]      @relation("MessagesSent")
  messagesReceived Message[]      @relation("MessagesReceived")
  conversations    Conversation[] @relation("UserConversations")
}

model Message {
  id             Int           @id @default(autoincrement())
  senderId       Int
  receiverId     Int
  content        String
  timestamp      DateTime      @default(now())
  readAt         DateTime?
  status         MessageStatus @default(SENT)
  sender         User          @relation("MessagesSent", fields: [senderId], references: [id])
  receiver       User          @relation("MessagesReceived", fields: [receiverId], references: [id])
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  conversationId Int
}

model Conversation {
  id           Int       @id @default(autoincrement())
  participants User[]    @relation("UserConversations")
  messages     Message[]
  createdAt    DateTime  @default(now())
}